AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  This stack contains the AWS workshop serverless application
Mappings:
  EnvMap:
    stage:
      logLevel: 'debug'

      WorkshopManagerLambdaFunctionMemorySize: 128
      WorkshopManagerLambdaFunctionTimeout: 30

      DynamoTableAwbWorkshopStoreDataRCU: '1'
      DynamoTableAwbWorkshopStoreDataWCU: '1'

    prep:
      logLevel: 'info'

      WorkshopManagerLambdaFunctionMemorySize: 128
      WorkshopManagerLambdaFunctionTimeout: 30

      DynamoTableAwbWorkshopStoreDataRCU: '1'
      DynamoTableAwbWorkshopStoreDataWCU: '1'
  
    prod:
      logLevel: 'error'

      WorkshopManagerLambdaFunctionMemorySize: 256
      WorkshopManagerLambdaFunctionTimeout: 30


      DynamoTableAwbWorkshopStoreDataRCU: '5'
      DynamoTableAwbWorkshopStoreDataWCU: '5'

Parameters:
  ApiCorsAllowed:
    Type: String
    Description: CORS API
  Environment:
    Type: String
    Description: Name of the environment
    AllowedValues:
      - stage
      - prep
      - prod
    ConstraintDescription: One value among "stage","prep","prod"
  AccountId:
    Type: String
    Description: AWS Account Id
Globals:
  Function:
    # "Global" properties of AWS::Serverless::Function resources
    Runtime: nodejs12.x
    Handler: src/handler.handler
    Environment:
      Variables:
        stage: !Ref Environment
        logLevel: !FindInMap [EnvMap, !Ref Environment, logLevel]
Resources:

  # IAM Role
  AwbExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Sid: AssumeRolePermissions
          Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - lambda.amazonaws.com
            - apigateway.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref CustomExecutionPolicy
  CustomExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowDDBAccess
            Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:DeleteItem
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/AWB_WORKSHOP_STORE_DATA"


  # Lambda Workshop Manager
  WorkshopManagerLambdaFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WorkshopManagerLambdaFunctionAliasawb
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Join
        - ':'
        - - !GetAtt 'WorkshopManagerLambdaFunction.Arn'
          - awb
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 'us-east-1'
          - ':'
          - !Ref AccountId
          - ':'
          - !Ref AwbApi
          - /*
  WorkshopManagerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'AWB_C001-${Environment}_workshop_manager'
      CodeUri: 's3://awb-project/awb-AmazonWorkshopBit-serverless-application/backend/src/lambdas/WorkshopManager/dist/dist.zip'
      Role: !GetAtt AwbExecutionRole.Arn
      Description: >-
        It manages the workshops configurations done by the companies
      AutoPublishAlias: awb
      MemorySize:
        !FindInMap [
            EnvMap,
            !Ref Environment,
            WorkshopManagerLambdaFunctionMemorySize,
        ]
      Timeout:
        !FindInMap [
            EnvMap,
            !Ref Environment,
            WorkshopManagerLambdaFunctionTimeout,
        ]

  AwbApi:
    Type: AWS::Serverless::Api
    DependsOn:
      - WorkshopManagerLambdaFunctionAliasawb
    Properties:
      Name: !Sub "AWB.REST.API.${Environment}"
      Description: "This REST API is exposed to the angular application. It is used to configure workshops"
      EndpointConfiguration:
        Type: REGIONAL
      OpenApiVersion: '3.0.1'
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'OPTIONS,GET,POST,PATCH,DELETE'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: !Ref ApiCorsAllowed
        MaxAge: "'600'"
      DefinitionBody:
        Fn::Transform:
          Name: 'AWS::Include'
          Parameters:
            Location: 's3://awb-project/awb-AmazonWorkshopBit-serverless-application/backend/api/swagger.yaml'

  AwbApiKey:
    Type: "AWS::ApiGateway::ApiKey"
    Properties:
      Name: !Sub "AWB.REST.API.APIKEY.${Environment}"
      Description: API Key for the AWB.REST.API REST API
      Enabled: true

  AwbApiUsagePlan:
    Type: "AWS::ApiGateway::UsagePlan"
    Properties:
      ApiStages:
        - ApiId: !Ref AwbApi
          Stage: !Ref Environment
      Description: AWB_BE UsagePlan
      UsagePlanName: !Sub "AWB_BE_BACKEND_${Environment}"
    DependsOn:
      - AwbApiStage
  AwbApiUsagePlanKey:
    Type: "AWS::ApiGateway::UsagePlanKey"
    Properties:
      KeyId: !Ref AwbApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref AwbApiUsagePlan

  # AWB_WORKSHOP_STORE_DATA
  DynamoTableAwbWorkshopStoreData:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "AWB_WORKSHOP_STORE_DATA_${Environment}"
      AttributeDefinitions:
        - AttributeName: "speakerId"
          AttributeType: "S"
        - AttributeName: "workshopId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "speakerId"
          KeyType: "HASH"
        - AttributeName: "workshopId"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits:
          !FindInMap [
              EnvMap,
              !Ref Environment,
              DynamoTableAwbWorkshopStoreDataRCU,
          ]
        WriteCapacityUnits:
          !FindInMap [
              EnvMap,
              !Ref Environment,
              DynamoTableAwbWorkshopStoreDataWCU,
          ]